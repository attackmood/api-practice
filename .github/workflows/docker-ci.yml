name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
      - name: 🛑 레포지토리 체크아웃
        uses: actions/checkout@v4  # GitHub 저장소에서 코드 가져오기

      - name: ☕ Java 11 설정
        uses: actions/setup-java@v4  # Java 17을 설정
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: 🏗️ Gradle 설정                                                                                                    
        uses: gradle/actions/setup-gradle@v4

      - name: 🔨 Spring Boot 빌드 (Gradle)
        run: ./gradlew clean build

      - name: 📦 빌드된 JAR 저장 (선택사항)
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build/libs

      - name: 🏗️ Docker 빌드
        run: docker build -t my-dockerhub-id/my-app:latest .

      - name: 🔑 Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🚀 Docker Hub에 푸시
        run: docker push my-dockerhub-id/my-app:latest

