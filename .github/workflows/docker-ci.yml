name: Docker CI/CD

on:
  push:
    branches:
      - master  # main 브랜치에 push될 때 실행

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # GitHub Actions에서 사용할 OS 환경

    steps:
      - name: 🛑 레포지토리 체크아웃
        uses: actions/checkout@v4  # GitHub 저장소에서 코드 가져오기

      - name: ☕ Java 17 설정
        uses: actions/setup-java@v4  # Java 17을 설정
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: 🏗️ Gradle 설정
        uses: gradle/actions/setup-gradle@v4  # Gradle 자동 설정 및 캐싱 활성화

      - name: 🔨 Spring Boot 빌드 (Gradle)
        run: ./gradlew build  # 공식 문서 방식 적용

      - name: 📦 빌드된 JAR 저장 (선택 사항)
        uses: actions/upload-artifact@v4
        with:
          name: Package
          path: build/libs/*.jar  # 빌드된 JAR을 GitHub Actions에 업로드

      - name: 🏗️ Docker 빌드
        run: docker build -t my-dockerhub-id/my-app:latest .

      - name: 🔑 Docker Hub 로그인
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: 🚀 Docker Hub에 푸시
        run: docker push my-dockerhub-id/my-app:latest
