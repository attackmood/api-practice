<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cantaur.api.mapper.tour.TouristStoryMapper">
    <select id="getTouristStoryList" parameterType="TouristStory" resultType="ResTouristStory">
        select
            tourist_story.tourist_story_uid,
            tourist_story_heart.heartCount,
            tourist_story.tourist_site_uid,
            tourist_story.member_uid,
            tourist_story.contents,
            tourist_story.created_at,
            concat(
                YEAR(tourist_story.created_at), '년 '
                , MONTH(tourist_story.created_at), '월 '
                , DAY(tourist_story.created_at), '일 '
                ,
                CASE DAYOFWEEK(tourist_story.created_at)
                WHEN '1' THEN '일요일'
                WHEN '2' THEN '월요일'
                WHEN '3' THEN '화요일'
                WHEN '4' THEN '수요일'
                WHEN '5' THEN '목요일'
                WHEN '6' THEN '금요일'
                WHEN '7' THEN '토요일'
                END
            ) as dateInfo,
            if(tourist_story.member_uid = #{memberUid}, 'Y', 'N') as usrAtcYn
        from ulsan_tour.tourist_story
         LEFT JOIN (
            SELECT
                tourist_story_uid,
                COUNT(member_uid) AS heartCount
            FROM ulsan_tour.tourist_story_heart
            WHERE heart_yn = 'Y'
            GROUP BY tourist_story_uid
        ) AS tourist_story_heart
         ON tourist_story_heart.tourist_story_uid = tourist_story.tourist_story_uid
        left join ulsan_tour.member on member.member_uid = tourist_story.member_uid
        where exposure_yn = 'Y'
        and tourist_story.deleted_at is null
        and tourist_story.created_at BETWEEN DATE_ADD(NOW(), INTERVAL -3 YEAR ) AND NOW() <!-- 최근 3년 게시물-->
        and tourist_site_uid = #{touristSiteUid}
        order by tourist_story.tourist_story_uid, tourist_story.created_at
    </select>



    <select id="getTouristStoryMbrId" parameterType="Long" resultType="String">
        select
            tourist_story.member_uid
        from ulsan_tour.tourist_story
        where tourist_story.tourist_story_uid = #{touristStoryUid}
    </select>

    <insert id="insertTouristStory" parameterType="ReqTouristStory" useGeneratedKeys="true" keyProperty="touristStoryUid">
        insert into ulsan_tour.tourist_story (
                                     tourist_site_uid
                                   , member_uid
                                   , contents
                                   , exposure_yn
                                   ,created_at
                                   , changed_at)
        values (#{touristSiteUid},#{memberUid},#{contents}, 'Y', now(), now());
    </insert>



    <insert id="insertTouristStoryHeart" parameterType="ReqTouristStoryHeart">
        insert into ulsan_tour.tourist_story_heart
        (tourist_story_uid, member_uid, heart_yn, created_at, changed_at)
        values
        (#{touristStoryUid}, #{memberUid}, 'Y', now(), now())
        on duplicate key update heart_yn =
        <choose>
            <when test='heart_yn == "N"'>
                'Y',
            </when>
            <otherwise>
                'N',
            </otherwise>
        </choose>
        changed_at = NOW()
    </insert>

    <update id="deleteTouristStory" parameterType="Long">
        update
            ulsan_tour.tourist_story
        set  tourist_story.deleted_at = NOW(),
             tourist_story.exposure_yn = 'N'
        where tourist_story.tourist_story_uid = #{touristStoryUid};
    </update>




</mapper>